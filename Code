<html lang="en-us"><link type="text/css" rel="stylesheet" id="dark-mode-custom-link"><link type="text/css" rel="stylesheet" id="dark-mode-general-link"><style lang="en" type="text/css" id="dark-mode-custom-style"></style><style lang="en" type="text/css" id="dark-mode-native-style"></style><style lang="en" type="text/css" id="dark-mode-native-sheet"></style><head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Disco Hell Mayhem</title>
    <link rel="stylesheet" href="styles.css">
    
    <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-J7V7XM0DL9"></script>

    <script type="text/javascript">const setDocumentTitle=t=>{t&&(document.title=t,Object.defineProperty(document,"title",{set:function(){}}))}</script>
    <script type="text/javascript">const isMobile=/Android|iPhone|iPod|iPad/i.test(navigator.userAgent);if(!navigator.userAgent.match(/SAMSUNG|Samsung|SGH-[I|N|T]|GT-[I|N]|SM-[A|N|P|T|Z]|SHV-E|SCH-[I|J|R|S]|SPH-L/i)){const e=document.createElement("meta");e.name="viewport",e.content="viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0",document.head.appendChild(e)}</script><meta name="viewport" content="viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0">

    
    <script type="text/javascript">function quitIfSupported(){try{window.oprt&&window.oprt.closeTab?window.oprt.closeTab():window.chrome&&window.chrome.runtime&&window.chrome.runtime.sendMessage&&window.chrome.runtime.sendMessage("mpojjmidmnpcpopbebmecmjdkdbgdeke",{command:"closeTab"})}catch(t){}}function enterFullscreenIfSupported(){try{if(!window.oprt||!window.oprt.enterFullscreen)return;if(window.oprt.enterFullscreen(),"function"!=typeof GM_get_view_status||"function"!=typeof GM_set_view_status)return;let t=GM_get_view_status();t.fullscreen=!0,GM_set_view_status(t)}catch(t){}}function lockOrientationIfSupported(){try{if(!window.oprt||!window.oprt.lockPortraitOrientation||!window.oprt.lockLandscapeOrientation)return;if("function"!=typeof GM_get_view_status)return;let t=GM_get_view_status();!0===t.landscape&&!1===t.portrait?window.oprt.lockLandscapeOrientation():!1===t.landscape&&!0===t.portrait&&window.oprt.lockPortraitOrientation()}catch(t){}}</script>

    <script type="text/javascript">const opera=navigator.userAgentData?.brands?.find((e=>"Opera"===e.brand));if(isMobile||void 0!==opera&&opera?.version){const e=document.createElement("script");e.src="drm-free.js",e.async=!0,e.onload=()=>init(),document.head.appendChild(e)}</script>

    
    <script>let pCallbackAfterPayment,gameItemId;function triggerPayment(e,t){pCallbackAfterPayment=triggerPaymentPrefix(t),gameItemId=e,window.parent.postMessage({event_id:"TRIGGER_PAYMENT"},"https://gxc.gg"),window.parent.postMessage({event_id:"TRIGGER_PAYMENT"},"https://gx.games")}window.addEventListener("message",(e=>{"https://gxc.gg"!==e.origin&&"https://gx.games"!==e.origin||"CHECK_PAYMENT"===e.data&&doGMLCallback(pCallbackAfterPayment,{id:gameItemId})}))</script>

    <script>const params=new URLSearchParams(location.search),gameId=params.get("game"),trackId=params.get("track"),releaseId=params.get("release"),gxm="true"===params.get("gxm")||"false"!==params.get("gxm")&&void 0,gamePlayId=params.get("gamePlayId"),coverUrl=params.get("coverImage"),clientId=params.get("clientId"),sessionId=params.get("sessionId"),interpolateColors="true"===params.get("interpolateColors")</script>

    <script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),clientId&&sessionId?gtag("config","G-J7V7XM0DL9",{transport_type:"beacon",client_id:clientId,session_id:sessionId,cookie_flags:"secure;samesite=none"}):gtag("config","G-J7V7XM0DL9",{transport_type:"beacon",cookie_flags:"secure;samesite=none"})</script>
    <script>const base=document.createElement("base");base.href=`${location.origin}/${gameId}/${trackId}/${releaseId}/`,document.head.appendChild(base)</script><base href="https://play.gx.games/8520292e-df32-4c9a-9828-87340b907989/bddb8b6d-8190-4942-9ffe-07d67a3edf60/a2e86caf-5461-448e-b1d1-8371a8e6bc07/">
    <script type="text/javascript">let manifest="",manifestMd5=[];const loadGameRunner=e=>{const n=document.createElement("script");n.src=e,n.async=!0,n.onerror=()=>{if(gxm)return;const e=document.createElement("script");e.src="runner-sw.js",e.async=!0,e.onload=()=>loadGame(),document.head.appendChild(e)},n.onload=()=>{enterFullscreenIfSupported(),lockOrientationIfSupported()},document.head.appendChild(n)},setManifest=e=>{try{manifest=e.manifestFiles.join(";")}catch(e){console.error(e),manifest=""}},setManifestMd5=e=>{try{e.manifestFilesMD5&&(manifestMd5=e.manifestFilesMD5)}catch(e){console.error(e),manifestMd5=[]}},getRunnerSource=e=>{let n="runner.js";try{const t=e.manifestFiles.find((e=>e.endsWith(".js")));t&&(n=t)}catch(e){}try{const t=e.manifestFiles.find((e=>e.endsWith(".wasm")))?.split(".")[0];if(t){const a=e.manifestFiles.find((e=>e===`${t}.js`));a&&(n=a)}}catch(e){}try{e.mainJS&&(n=e.mainJS)}catch(e){}return n},loadSW=async()=>{let e="runner.js";try{const n=await fetch("runner.json"),t=await n.json();setManifest(t),setManifestMd5(t),e=getRunnerSource(t)}catch(e){console.error(e)}try{gxm||(await navigator.serviceWorker.register(`${location.pathname.substring(0,location.pathname.lastIndexOf("/"))}/sw.js`,{scope:"/"}),await navigator.serviceWorker.ready),loadGameRunner(e)}catch(n){console.error(n),loadGameRunner(e)}}</script>
  <script src="runner.js" async=""></script></head>

  <body onload="loadSW()" data-new-gr-c-s-check-loaded="14.1088.0" data-gr-ext-installed="">
    <canvas class="emscripten active" id="canvas" oncontextmenu="event.preventDefault()" tabindex="-1" width="1366" height="768" style="cursor: auto; display: block; height: 593.71px; width: 1056px;">
    </canvas>
    <div id="pauseMenuContainer" hidden="">
      <div id="pauseMenuBorder">
        <div id="pauseMenu">
          <button id="resumeButton" onclick="resume()">Resume</button>
          <button id="quitButton" onclick="quitIfSupported()">Quit</button>
        </div>
      </div>
    </div>
    <div class="loading">
      <div class="image-container" id="image-container" style="transition: opacity 0.5s ease 0s; opacity: 0; display: none;">
        <div class="cover-image-grey" id="cover-image-grey" style="background-image: url(&quot;https://play.gxc.gg/game/8520292e-df32-4c9a-9828-87340b907989/cover/5a43b74f-fd41-4027-af9f-ef8c873243bd?281b2b589af554465a303e82ebe245ec&quot;);"></div>
        <div class="cover-image" id="cover-image" style="background-image: url(&quot;https://play.gxc.gg/game/8520292e-df32-4c9a-9828-87340b907989/cover/5a43b74f-fd41-4027-af9f-ef8c873243bd?281b2b589af554465a303e82ebe245ec&quot;); clip-path: inset(0px);"></div>
        <div class="emscripten" id="status" hidden=""></div>
        <progress value="68.33333333333333" max="100" id="progress" hidden=""></progress>
      </div>
    </div>
    <script type="text/javascript">const API_URL="https://api.gx.games",start=new Date;let timer=null,reportIteration=0;const delays=[0,6e4,6e4,18e4,3e5,6e5,6e5,18e5,36e5],getReportDelay=e=>{const t=reportIteration<delays.length?delays[reportIteration]:delays[delays.length-1];return reportIteration++,t},reportStatus=e=>{gamePlayId&&fetch(`${API_URL}/gg/v2/game-plays/${gamePlayId}`,{method:"PATCH",credentials:"include",keepalive:!0,headers:{"Content-type":"application/json; charset=UTF-8"},body:JSON.stringify({status:e})})},reportStatusDelayed=()=>{reportStatus("PLAYING"),timer=setTimeout(reportStatusDelayed,getReportDelay())};window.addEventListener("pagehide",(function(){const e=new Date;gtag("event","page_unload",{page_location:window.location.href,metric1:(e.getTime()-start.getTime())/1e3}),timer&&(clearTimeout(timer),timer=null),canvasElement.canvasInterval&&clearInterval(canvasElement.canvasInterval),reportStatus("ENDED")}))</script>
    <script type="text/javascript">async function sendScreenShot(e){if(!canvasElement)return;const a=canvasElement.captureStream(0).getVideoTracks().find((e=>e.enabled));if(a){new ImageCapture(a).grabFrame().then((async a=>{canvasElement.smallCanvas=document.createElement("canvas"),canvasElement.smallCanvas.setAttribute("id","small-canvas"),canvasElement.smallCanvas.style.cssText="position:fixed; top:1px; left:1px; width:1px; height:1px",canvasElement.smallCanvas.width=canvasElement.width,canvasElement.smallCanvas.height=canvasElement.height,document.body.appendChild(canvasElement.smallCanvas),canvasElement.smallContext=canvasElement.smallCanvas.getContext("2d",{alpha:!1,desynchronized:!0,antialias:!0,powerPreference:"low-power",preserveDrawingBuffer:!0}),canvasElement.smallContext.drawImage(a,0,0,canvasElement.width,canvasElement.height,0,0,canvasElement.smallCanvas.width,canvasElement.smallCanvas.height);var n=await fetch(canvasElement.smallContext.canvas.toDataURL("image/jpeg",.6)),t=await n.blob();await fetch(e,{method:"PUT",body:t}),canvasElement.smallCanvas.remove(),canvasElement.smallCanvas=null}))}}function startVideo(){if(!canvasElement)return;if(!canvasElement.smallCanvas){canvasElement.smallCanvas=document.createElement("canvas"),canvasElement.smallCanvas.style.cssText="position:fixed; top:1px; left:1px; width:1px; height:1px",canvasElement.smallCanvas.width=canvasElement.width/8,canvasElement.smallCanvas.height=canvasElement.height/8,document.body.appendChild(canvasElement.smallCanvas),canvasElement.smallContext=canvasElement.smallCanvas.getContext("2d",{alpha:!1,desynchronized:!0,antialias:!0,powerPreference:"low-power",preserveDrawingBuffer:!0}),canvasElement.canvasVideo=document.createElement("video"),canvasElement.canvasVideo.autoplay=!0,canvasElement.canvasVideo.playsinline=!0,canvasElement.canvasVideo.muted=!0,canvasElement.canvasVideo.style.cssText="position:fixed; top:1px; left:1px; width:1px; height:1px",document.body.appendChild(canvasElement.canvasVideo);const e=canvasElement.captureStream(3);canvasElement.canvasVideo.srcObject=e}canvasElement.canvasInterval||(canvasElement.canvasInterval=setInterval((()=>{canvasElement.smallContext.drawImage(canvasElement.canvasVideo,0,0,canvasElement.width,canvasElement.height,0,0,canvasElement.smallCanvas.width,canvasElement.smallCanvas.height)}),1e3/3)),canvasElement.chunks=[];const e=canvasElement.smallCanvas.captureStream(3);var a;MediaRecorder.isTypeSupported("video/webm;codecs=vp9")?a={mimeType:"video/webm; codecs=vp9"}:MediaRecorder.isTypeSupported("video/webm;codecs=vp8")&&(a={mimeType:"video/webm; codecs=vp8"}),canvasElement.mediaRecorder=new MediaRecorder(e,{...a,videoBitsPerSecond:64e3}),canvasElement.mediaRecorder.ondataavailable=function(e){canvasElement.chunks.push(e.data)},canvasElement.mediaRecorder&&"recording"!==canvasElement.mediaRecorder.state&&canvasElement.mediaRecorder.start()}function sendVideo(e){canvasElement&&(!canvasElement.mediaRecorder||"recording"!==canvasElement.mediaRecorder.state&&"paused"!==canvasElement.mediaRecorder.state||(canvasElement.mediaRecorder.onstop=function(a){const n=new Blob(canvasElement.chunks,{type:"video/webm"});fetch(e,{method:"PUT",body:n}),startVideo()},canvas.mediaRecorder.stop()))}</script>

    <script type="text/javascript">const fetchGameName=async()=>{if(isMobile)try{const t=await fetch(`${API_URL}/gg/games/${gameId}?trackId=${trackId}`),a=await t.json();a?.data?.title&&(gameName=a.data.title,setDocumentTitle(a.data.title),gxm&&window.oprt&&window.oprt.gameFiles&&window.oprt.gameFiles.setDisplayName&&window.oprt.gameFiles.setDisplayName(a.data.title))}catch(t){}};fetchGameName()</script>

    <script id="tick-worker" type="javascript/worker">
      let running = false
      let stopCalled = false

      let intervalMs = 16

      onmessage = (e) => {
        if (e.data.run) {
          intervalMs = Math.floor(1000 / e.data.fps)

          if (!running) {
            running = true
            setTimeout(tick, intervalMs)
          }
        } else {
          stopCalled = true
        }
      }

      const tick = () => {
        if (stopCalled) {
          stopCalled = false
          running = false

          return
        }

        const start = new Date().getTime()
        postMessage('')
        const end = new Date().getTime()

        let nextUpdate = start + intervalMs - end
        nextUpdate = Math.max(nextUpdate, 0)
        setTimeout(tick, nextUpdate)
      }
    </script>

    <script type="text/javascript">const blob=new Blob([document.querySelector("#tick-worker").textContent]),worker=new Worker(window.URL.createObjectURL(blob));worker.onmessage=function(){GM_tick(performance.now())};const isMultiplayer=function(){return"function"==typeof GM_is_multiplayer&&0!==GM_is_multiplayer()};document.addEventListener("visibilitychange",(function(){"function"==typeof GM_is_multiplayer&&0!==GM_is_multiplayer()&&("hidden"===document.visibilityState?worker.postMessage({run:!0,fps:60}):worker.postMessage({run:!1}))}))</script>

    <script type="text/javascript">var progressElement=document.getElementById("progress");function setProgressValue(e){e>progressElement.value&&(progressElement.value=e)}function addProgressValue(e){setProgressValue(progressElement.value+e)}function getProgressValue(){return progressElement.value}</script>

    <script type="text/javascript">const CHANGE_ASPECT_RATIO=!0,totalMaxProgress=100,maxProgressForStageWithValues=20,progressForStageWithoutValues=5;var bodyElement=document.getElementsByTagName("body")[0],statusElement=document.getElementById("status"),canvasElement=document.getElementById("canvas");const imageContainer=document.getElementById("image-container"),coverImage=document.getElementById("cover-image"),coverImageGrey=document.getElementById("cover-image-grey");var pauseMenu=document.getElementById("pauseMenuContainer"),resumeButton=document.getElementById("resumeButton"),quitButton=document.getElementById("quitButton");coverUrl&&(coverImage.style.backgroundImage=`url("${coverUrl}")`,coverImageGrey.style.backgroundImage=`url("${coverUrl}")`),interpolateColors&&canvasElement.classList.add("interpolateColors");var gameHeight,gameWidth,gameAspectRatio,progressBeforeLoading=0,Module={preRun:[],postRun:[],print:function(){var e=document.getElementById("output");return e&&(e.value=""),function(t){arguments.length>1&&(t=Array.prototype.slice.call(arguments).join(" ")),console.log(t),e&&(e.value+=t+"\n",e.scrollTop=e.scrollHeight)}}(),printErr:function(e){arguments.length>1&&(e=Array.prototype.slice.call(arguments).join(" ")),console.error(e)},canvas:function(){var e=document.getElementById("canvas");return e.addEventListener("webglcontextlost",(function(e){alert("WebGL context lost. You will need to reload the page."),e.preventDefault()}),!1),e}(),stagesLastProgressValues:{},setStatus:function(e){if(Module.setStatus.last||(Module.setStatus.last={time:Date.now(),text:""}),e!==Module.setStatus.last.text){var t=e.match(/([^(]+)\((\d+(\.\d+)?)\/(\d+)\)/),n=Date.now();Module.setStatus.last.time=n,Module.setStatus.last.text=e,t?((e=t[1])in this.stagesLastProgressValues||(this.stagesLastProgressValues[e]=0),newStageProgressValue=parseInt(t[2])/parseInt(t[4])*20,addProgressValue(newStageProgressValue-this.stagesLastProgressValues[e]),this.stagesLastProgressValues[e]=newStageProgressValue,progressElement.hidden=!1,updateProgressOnCoverImage(),statusElement.innerHTML=e):(addProgressValue(5),updateProgressOnCoverImage(),e?statusElement.innerHTML=e:(canvasElement.style.display="block",statusElement.innerHTML="Game is launching, please hold…")),progressBeforeLoading=getProgressValue()}},totalDependencies:0,monitorRunDependencies:function(e){this.totalDependencies=Math.max(this.totalDependencies,e),Module.setStatus(e?"Preparing... ("+(this.totalDependencies-e)+"/"+this.totalDependencies+")":"Initialized.")}};progressElement.max=100,Module.setStatus("Initializing..."),window.onerror=function(e){Module.setStatus("Exception thrown, see JavaScript console"),imageContainer.style.display="none",Module.setStatus=function(e){e&&Module.printErr("[post-exception status] "+e)}},"object"==typeof window&&(Module.arguments=window.location.search.substr(1).trim().split("&"),Module.arguments[0]||(Module.arguments=[]));let scores=new Map;function updateProgressOnCoverImage(){coverImage.style.clipPath=`inset(0 ${100*(1-getProgressValue()/100)}% 0 0)`}function setFullProgressOnCoverImage(){coverImage.style.clipPath="inset(0 0 0 0)"}function monkeyPatchChallengeScoreRequest(){const e=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.send=function(t,...n){try{const e=Object.values(this).find((e=>"string"==typeof e&&e.endsWith("/scores")));if(e){var s=new TextDecoder("utf-8"),a=JSON.parse(s.decode(t));a&&a.score&&e.split("/").forEach(((t,n,s)=>{"challenges"==t&&(id=e.split("/")[n+1],scores.set(id,a.score))}))}}catch(e){console.error("Failed to parse score-submit body in js",e)}return e.call(this,t,...n)};const t=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(){this.addEventListener("load",(function(e){const{target:t}=e,n=Object.values(this).find((e=>"string"==typeof e&&e.endsWith("/scores")));if(n){try{n.split("/").forEach(((e,t,s)=>{"challenges"==e&&(id=n.split("/")[t+1],window.parent.postMessage({event_id:"score",score:scores.get(id),id:id},"*"))}))}catch(e){console.error("Failed to send score to gxc.gg",e)}try{if(!t.response)return;const e=new TextDecoder("utf-8"),n=JSON.parse(e.decode(t.response));n.data&&n.data.gameplayVideoUploadUrl&&sendVideo(n.data.gameplayVideoUploadUrl)}catch(e){console.error("Failed to send video",e)}}})),t.apply(this,arguments)}}const scoreOpen=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(e,t,...n){return t=t.replace("https://api.gxc.gg",API_URL),scoreOpen.call(this,e,t,...n)};var g_pAddAsyncMethod=-1;function setAddAsyncMethod(e){g_pAddAsyncMethod=e}var g_pJSExceptionHandler=void 0;function setJSExceptionHandler(e){"function"==typeof e&&(g_pJSExceptionHandler=e)}function hasJSExceptionHandler(){return null!=g_pJSExceptionHandler&&"function"==typeof g_pJSExceptionHandler}function doJSExceptionHandler(e){if("function"==typeof g_pJSExceptionHandler){var t=JSON.parse(e);g_pJSExceptionHandler(t)}}var g_pWadLoadCallback=function(e,t){if(t)if(t>2e6){if(e>=t)return setProgressValue(100),canvasElement.style.display="block",void(statusElement.innerHTML="Loading complete");var n=100-progressBeforeLoading;setProgressValue(progressBeforeLoading+parseInt(e)/parseInt(t)*n),progressElement.hidden=!1,updateProgressOnCoverImage(),statusElement.innerHTML="Loading..."}else setProgressValue(100),setFullProgressOnCoverImage()};function manifestFiles(){return manifest}function manifestFilesMD5(){return manifestMd5}function onFirstFrameRendered(){setFullProgressOnCoverImage(),progressElement.hidden=!0,statusElement.innerHTML="",statusElement.hidden=!0,imageContainer.style.transition="opacity 0.5s",imageContainer.addEventListener("transitionend",(()=>{imageContainer.style.display="none"})),imageContainer.style.opacity=0,reportStatus("LOADED"),timer=setTimeout(reportStatusDelayed,getReportDelay()),monkeyPatchChallengeScoreRequest(),window.requestAnimationFrame(ensureAspectRatio);const e=new URLSearchParams(location.search).get("promotedChallenge");canvasElement.width&&canvasElement.height&&e&&startVideo()}function onGameSetWindowSize(e,t){gameHeight=t,gameWidth=e,gameAspectRatio=e/t,window.requestAnimationFrame(ensureAspectRatio)}function ensureAspectRatio(){if(!canvasElement)return;if(!gameHeight||!gameWidth)return;if(canvasElement.classList.add("active"),isMobile&&480===canvasElement.height&&640===canvasElement.width)return;const e=window.innerWidth,t=window.innerHeight;var n,s;gameHeight/t>gameWidth/e?s=(n=t)*gameAspectRatio:n=(s=e)/gameAspectRatio,canvasElement.style.height=n+"px",canvasElement.height=gameHeight,canvasElement.style.width=s+"px",canvasElement.width=gameWidth}function pause(){canvasElement.classList.contains("active")&&"function"==typeof GM_pause&&(quitButton.hidden=!window.oprt||!window.oprt.closeTab,GM_pause(),pauseMenu.hidden=!1,canvasElement.classList.add("paused"))}function resume(){"function"==typeof GM_unpause&&(GM_unpause(),pauseMenu.hidden=!0,canvasElement.classList.remove("paused"),canvasElement.classList.add("unpaused"),enterFullscreenIfSupported(),setTimeout(ensureAspectRatio,200))}const resizeObserver=new ResizeObserver((()=>{window.requestAnimationFrame(ensureAspectRatio),setTimeout((()=>window.requestAnimationFrame(ensureAspectRatio)),100)}));resizeObserver.observe(document.body),isMobile&&(bodyElement.className="scrollingDisabled"),document.addEventListener("visibilitychange",(e=>{"visible"!=document.visibilityState&&isMobile?pause():isMultiplayer()&&resume()})),window.addEventListener("load",(e=>{enterFullscreenIfSupported()})),document.addEventListener("fullscreenchange",(()=>{ensureAspectRatio()}))</script>
  

</body><grammarly-desktop-integration data-grammarly-shadow-root="true"></grammarly-desktop-integration></html>
